Ceci est le fichier Info asn1-mode.info, produit par Makeinfo version
4.1 à partir asn1-mode.texi.

INFO-DIR-SECTION Development
START-INFO-DIR-ENTRY
* ASN.1 mode: (asn1-mode-fr).   Mode Emacs pour ASN.1.
END-INFO-DIR-ENTRY

   This file documents ...

   Copyright 2003 France Te'le'com - Branche De'veloppement


File: asn1-mode.info,  Node: Top,  Next: Pre'sentation du mode ASN.1,  Prev: (dir),  Up: (dir)

Mode "ASN.1" pour Emacs
***********************

* Menu:

* Pre'sentation du mode ASN.1::
* Installation::
* Commandes de base::
* le menu ASN.1::
* Compilation::
* Editeur syntaxique::
* Personnalisation::
* Configuration avancee::


File: asn1-mode.info,  Node: Pre'sentation du mode ASN.1,  Next: Installation,  Prev: Top,  Up: Top

Pre'sentation du mode ASN.1
***************************

Introduction au mode ASN.1
==========================

   Un petit tutorial pour Emacs est disponible dans le fichier
`TUTORIAL'  qui est normalement livre' avec le mode ASN.1 pour Emacs.
Si vous ne connaissez pas Emacs, il est conseille' de lire ce fichier
avant de poursuivre la lecture de cette documentation.

Qu'est-ce qu'un mode Emacs ?
============================

   Un mode Emacs est une extension logicielle d'Emacs. Il permet
l'e'dition et la manipulation aise'e d'un certain type de document.  Les
modes Emacs peuvent aider a` l'e'dition de programmes e'crits dans un
certain langage (ex. : C, Ada...) ; ils sont alors conside're's comme
des environnements de programmation.

   Le moins spe'cialise' des modes Emacs est le Fundamental Mode.  Ce
mode n'ayant aucune spe'cificite', le comportement d'Emacs est celui
de'fini par de'faut. Tous les autres modes rede'finissent un certain
nombre de parame`tres d'Emacs tels que :

   * des raccourcis claviers spe'cifiques au mode,

   * la mise en couleur, en gras, en italique, de mots-cle's,

   * l'indentation,

   * le comportement d'Emacs dans certaines situations.


   Chaque buffer Emacs (tampon en franc,ais) se trouve dans un certain
major mode (mode majeur en franc,ais). Le nom de ce mode est toujours
inscrit dans la barre d'e'tat du buffer, c'est le premier mot a`
l'inte'rieur des parenthe`ses. Le buffer peut, par contre, se trouver
sous plusieurs minor modes (modes mineurs en franc,ais), leurs noms
suivent alors le nom du mode majeur.

Le mode ASN.1
=============

   Le mode ASN.1 pre'sente' ici est un mode majeur, il permet :

  1. *une grande rapidite' d'e'criture :*
        - insertion simple et rapide de morceaux de code ASN.1,

        - comple'tion permettant d'e'viter d'e'crire ou de re'e'crire
          certains mots ;

  2. *une re'duction du nombre d'erreurs :*
        - Emacs introduit a` notre place les mots-cle's ;

  3. *une lisibilite' accrue :*
        - mots-cle's mis en couleur a` l'e'cran,

        - impression papier avec mots-cle's en gras ;

  4. *l'indentation automatique :*
        - certaines fautes d'e'criture peuvent e^tre ainsi de'cele'es
          dans la spe'cification,

        - compre'hension de la spe'cification nettement ame'liore'e.


   Les fonctionnalite's du mode sont de'crites dans la suite de ce
document. Ne vous inquie'tez pas de voir e'norme'ment de raccourcis
clavier de'finis ici. En effet les commandes lance'es par ces
raccourcis claviers sont, pour la plupart, aussi pre'sentes dans le
menu "ASN.1" de la barre des menus.  D'autre part vous retrouverez les
raccourcis claviers indique's dans les menus, ce qui pourra vous aider
a` les apprendre.


File: asn1-mode.info,  Node: Installation,  Next: Commandes de base,  Prev: Pre'sentation du mode ASN.1,  Up: Top

Installation
************

Configuration requise
=====================

   Ce mode ASN.1 est destine' a` une utilisation sous GNU Emacs ou
XEmacs.  Il a e'te' teste' sur :

*PC*
     Emacs 20.3

*Unix*
     Emacs 19.34, Emacs 20.3, XEmacs 20.2, XEmacs 20.4

   Remarque : si vous posse'dez de'ja` un Emacs ou un XEmacs, le
nume'ro de version  s'obtient par exemple en tapant `M-x emacs-version'.
Ce mode Emacs devrait fonctionner sur tout GNU Emacs dont la version
est supe'rieure ou e'gale a` 19.34, sur tout XEmacs de version
supe'rieure ou e'gale a` 19.34.  Si vous posse'dez une vielle version
d'Emacs (<20.0), il faut auparavant installer le package custom,
disponible a l'adresse suivante :
http://www.dina.kvl.dk/~abraham/custom/

   Sur PC (configuration avec Windows 3.1), le mode Emacs est
le'ge`rement limite' par l'implantation actuelle d'Emacs : les entite's
se'lectionnables (voir paragraphe "De'veloppement en ligne") qui
changent de couleur sous Unix lorsque le pointeur de la souris passe
dessus, ne changent pas de couleur sur PC.

Comment de'marrer le mode ASN.1
===============================

   Tout d'abord, il faut que vous ayez effectue' l'installation (voir
fichier `INSTALL').  Une fois cela termine', charger un fichier dont
l'extension est `".asn"', `".ASN"', `".asn1"' ou `".ASN1"' active
automatiquement le mode "ASN.1".  Le mode ASN.1 est bien en place si
`"ASN.1"' apparai^t dans la barre d'e'tat du buffer, entre les
parenthe`ses.

   Une autre me'thode pour rendre actif le mode ASN.1 dans le buffer
courant est d'exe'cuter la commande `M-x asn1-mode' (c'est a` dire de
taper au clavier `ESC', `"x"', `"asn1-mode"' et enfin la touche
`ENTER'; pour plus d'explication sur les combinaisons de touches,
veuillez vous re'fe'rer au tutorial Emacs qui se trouve dans le fichier
`TUTORIAL'.

   Remarque : le nume'ro de version du mode ASN.1 s'obtient  soit en
regardant le de'but du fichier `asn1-mode.el', soit en tapant dans un
buffer en mode ASN.1 : `M-x asn1-mode-version'.


File: asn1-mode.info,  Node: Commandes de base,  Next: le menu ASN.1,  Prev: Installation,  Up: Top

Commandes de base
*****************

Commandes qui concernent l'indentation
======================================

`TAB'
     Indente la ligne courante en fonction du contenu des lignes qui
     pre'ce'dent.

`ENTER'
     Indente la ligne courante, va a` la ligne apre`s le curseur, puis
     indente la nouvelle ligne

`C-c C-r'
     Indente la re'gion se'lectionne'e

`C-c C-b'
     Indente le buffer (*Attention*. l'exe'cution de cette commande peut
     prendre beaucoup de temps)

`M-i'
     Inse`re une tabulation (on peut gra^ce a` cette commande faire des
     alignements en colonne pour les types CHOICE, SEQUENCE et SET ou
     les classes d'objet informationnel).
     Exemple :
        - tapez au clavier dans un buffer vide (le mode ASN.1 e'tant
          active') :
               "champ1" M-i M-i "Type1" ENTER
               "champ1bis" M-i M-i "Type2" ENTER

        - vous obtenez :
               champ1          Type1
               champ1bis       Type2

        - on constate que les deux re'fe'rences de type `"Type1"' et
          `"Type2"' sont aligne'es verticalement.

Comple'tion de mots
===================

`M-TAB'
     Essaye de comple'ter le mot qui pre'ce`de le curseur.  La
     comple'tion est re'alise'e a` partir d'une liste contenant les
     mots re'serve's d'ASN.1 et d'autres fre'quemment utilise's dans
     l'e'criture de spe'cifications ASN.1 (ex. : `itu-t(0)',
     `HAS PROPERTY'...).
     Exemple :
        - vous tapez au clavier `"BEG"' dans le buffer qui est en mode
          ASN.1,

        - vous tapez `M-TAB', `"BEG"' est comple'te' en `"BEGIN"'

     Note : si plusieurs comple'tions sont possibles, celles-ci sont
     toutes affiche'es.

`M-/'
     Essaye de comple'ter le mot qui pre'ce`de le curseur a` partir
     d'une liste compose'e de tous les mots pre'sents actuellement dans
     les buffers d'Emacs. Cette commande est tre`s utile et permet de
     ne pas re'e'crire en entier un mot de'ja` e'crit. Par exemple, si
     l'on a de'ja` e'crit le nom d'un type ASN.1 dans le de'but du
     module et si l'on doit le re'e'crire a` nouveau, au lieu de le
     re'e'crire en entier, on tape juste le de'but et puis l'on
     comple`te avec cette commande.
     Exemple :
        - Dans votre buffer vous avez :
               SET {
                 champ1     Type1,
                 champ2     Type2,
                 champ1bis  T

        - vous voulez que le type de `"champ1bis"' soit `"Type1"'. Vous
          placez donc le curseur juste apre`s `"champ1bis T"',

        - vous composez alors `M-\', Emacs vous propose `"Type2"',

        -  vous retapez `M-\', Emacs vous propose `"Type1"',

Recherche des re'fe'rences
==========================

   Il est tre`s utile de pouvoir afficher la de'finition d'une
re'fe'rence de type, de valeur, de classe... ou de chercher toutes les
occurences d'une re'fe'rence.  Ceci est possible via le menu
"Reference".

   Pour cela, il faut d'abord cre'er le fichier de re'fe'rences
(raccourci `C-c C-a'). Ensuite, on peut utiliser les autres entre'es du
menu.

   Voici un exemple tout simple :

     PetitEntier ::= INTEGER (0..121)
     
     -- plusieurs lignes plus bas ...
     
     Age ::= PetitEntier

   On commence par cre'er le fichier de re'fe'rences en indiquant la
liste des fichiers ASN.1 dans lesquels on souhaite fairedes recherches :
     Fichiers ou chercher les references : *.asn
   Ceci indique que toutes les re'fe'rences des fichiers d'extension
`.asn' vont e^tre place'es dans un fichier (`TAGS'). Emacs saura alors
dans quel fichier ASN.1 se trouve chaque de'finition.

   Ensuite, pour trouver la de'finition de `PetitEntier', il suffit de
taper <M-.> (entre'e "Trouver une Definition" du sous-menu
"Reference"). Alors que le curseur se trouve sur cette re'fe'rence,
Emacs propose de rechercher la de'finition du mot sous le curseur.  Il
suffit donc d'appuyer sur `<RET>'.  Sinon, il faut taper `PetitEntier'
a` la main (on dispose toutefois de la comple'tion en appuyant sur
`TAB').  Emacs se rend imme'diatement a` l'endroit ou` se trouve la
de'finition (il ouvre le fichier correspondant si cela est ne'cessaire).

   Il est e'galement possible de se de'placer de module en module
(`C-x [' pour aller au module pre'ce'dent et `C-x ]' pour aller au
module suivant) et de de'finition en de'finition (`C-<Up>' pour aller
a` la de'finition pre'ce'dente et `C-<Down>' pour aller a` la
de'finition suivante).

Les types de commentaires
=========================

   Les fonctionnalite's d'Emacs incitent a` diffe'rencier trois styles
de commentaires :
  1. *commentaires  pre'fixes :* ces commentaires pre'ce`dent les
     de'finitions de modules, les de'finitions de type, etc.  Ils sont
     indente's comme une ligne ordinaire.

  2. *commentaires dans le code :* ces commentaires sont inse're's dans
     les lignes de la spe'cification. Aucune question ne se pose quant
     a` l'indentation (la ligne est indente'e sans tenir compte des
     commentaires).

  3. *commentaires postfixes :* ce troisie`me type de commentaire est
     celui de fin de ligne. Emacs permet d'aligner tous les
     commentaires de cette sorte sur la me^me colonne en fin de ligne.
     Cette colonne est parame'trable comme explique' ci-apre`s.

         Exemple :
      -- commentaire pre'fixe
      ExempleType := SET {    -- commentaire postfixe
       champ1        Type1,   -- commentaire postfixe
       champ2        Type2,   -- commentaire postfixe
       champ3 --expl-- Type1  -- commentaire postfixe
     }

Commandes qui concernent les commentaires
=========================================

`M-;'
     inse`re un de'but de commentaire ASN.1 en fin de ligne ou de'place
     le commentaire ASN.1 de cette ligne en fin de ligne.

`C-x ;'
     permet de changer le nume'ro de la colonne ou` sont place's les
     commentaires en fin de ligne. Pour utiliser cette commande, il
     suffit de se placer sur la colonne ou` l'on veut que dore'navant
     tous les commentaires soient indente's, puis d'exe'cuter la
     commande. La valeur par de'faut du nume'ro de colonne  est `32'.
     A` partir du moment ou` vous avez change' ce nume'ro de colonne,
     tous les commentaires que vous indenterez par la suite de'buteront
     sur cette colonne, par contre les commentaires de'ja` pre'sents
     actuellement dans le buffer courant ne sont pas automatiquement
     change's de place et aligne's sur cette colonne.

   On a donc trois types de commentaires et deux commandes
d'indentation :
`TAB'
     permet d'indenter les lignes de code et les commentaires pre'fixes.

`M-;'
     permet de de'placer le commentaire de fin de ligne vers une
     colonne de'termine'e, afin que tous les commentaires postfixes
     soient aligne's verticallement.


File: asn1-mode.info,  Node: le menu ASN.1,  Next: Compilation,  Prev: Commandes de base,  Up: Top

Le menu "ASN.1"
***************

   Au de'marrage du mode, le menu "ASN.1" apparai^t dans la barre des
menus. Il propose les commandes suivantes :

`TAB'
     "Indenter la Ligne"

`C-c C-r'
     "Indenter une Re'gion"

`C-c C-b'
     "Indenter Tout"

`M-;'
     "Indenter un Commentaire"

`M-i'
     "Inse'rer une Tabulation"

`M-TAB'
     "Comple'tion ASN.1"

`M-/'
     "Comple'tion Usuelle"

Mise en franc,ais des menus
===========================

   Il est possible d'avoir les menus, les messages et plusieurs options
de personnalisation en franc,ais.  Pour cela, se'lectionner "Immediate
Customize" et "Language" dans le menu ASN.1.

L'entre'e "Compiler"
====================

`C-c C-c'
     L'entre'e "Compiler" du menu "ASN.1" permet d'effectuer une
     compilation du fichier correspondant au buffer courant. Voir la
     *Note Compilation:: pour plus de pre'cisions.

Construction du menu syntaxique
===============================

   L'entre'e "Construire le menu syntaxique" permet de construire le
menu de syntaxe (la construction peut prendre quelques secondes).  Voir
la *Note Editeur syntaxique::.

   Il est possible de construire le menu syntaxique automatiquement au
de'marrage (voir la *Note Personnalisation Rapide: Personnalisation.).

L'entre'e "Aide"
================

`C-c C-h'
     "Aide" Vous permet d'obtenir la documentation que vous lisez
     actuellement (en version hypertextuelle).


File: asn1-mode.info,  Node: Compilation,  Next: Editeur syntaxique,  Prev: le menu ASN.1,  Up: Top

Utilisation d'un compilateur
****************************

   L'entre'e "Compiler" du menu "ASN.1" permet de lancer un compilateur
ou un autre outil d'analyse directement sous Emacs. Si ce compilateur
produit des messages d'erreur compre'hensibles par Emacs, l'utilisateur
pourra se de'placer aise'ment d'erreur en erreur, Emacs plac,ant
automatiquement le curseur sur la ligne ou` s'est produite l'erreur.
Par de'faut, le mode ASN.1 est parame'tre' pour prendre en compte les
messages retourne's par Asnp, un analyseur syntaxique pour ASN.1:1997
de'veloppe' par France Te'le'com R&D
(http://asn1.elibel.tm.fr/fr/outils/asnp).

`"Compiler" (C-c C-c)'
     exe'cute la commande de compilation (rede'finissable via le
     sous-menu "Personnalisation rapide") suivie des parame`tres de
     compilation (rede'finissables avec le me^me sous-menu) suivie
     enfin du nom du fichier e'dite' dans le buffer courant. Une fois
     la compilation termine'e, on peut se rendre a` n'importe quelle
     erreur indique'e en cliquant avec la souris (bouton du milieu) sur
     la ligne contenant l'erreur dans le buffer de compilation (il est
     possible aussi de taper `ENTER' sur la ligne du buffer de
     compilation contenant l'erreur).

     Note : si plusieurs messages d'erreur indiquent la me^me ligne et
     la me^me colonne, seul le premier message sera actif. Le fait de
     cliquer sur les autres n'aura aucun effet.

`"Commande de Compilation"'
     Cet item permet de changer la commande appele'e lorsque l'entre'e
     "Compiler" est exe'cute'e. Si vous utilisez Asnp comme analyseur
     syntaxique, il est tre`s important de pre'ciser le chemin absolu
     ou` se trouve le fichier Asnp, sinon le fichier contenant les
     messages d'erreur d'Asnp ne sera pas trouve'.
     Exemple (si l'outil Asnp se trouve dans le re'pertoire
     `/local/asn1/' ) :
        -  lancez "Commande de Compilation",

        -  le message `"Commande de compilation : "' apparai^t dans le
          minibuffer,

        - entrez au clavier : `/local/asn1/asnp',

        - tapez sur `ENTER'.

     Si le nom de la commande de compilation contient le texte oss,
     l'option "-messageFormat emacs" est passe'e a` oss."

`"Parametres de Compilation"'
     Cet item permet de changer les parame`tres de la commande
     exe'cute'e par "Compile".
     Exemple : (si vous utilisez Asnp) :
        - lancez "Parametres de Compilation",

        - le message `"Parametres de compilation : "' apparai^t dans le
           minibuffer,

        - entrez au clavier : `"-fr"' (ce sont les parame`tres par
          de'faut),

        - tapez sur `ENTER'.

Si le nom de la commande de compilation contient le texte oss, l'option
"-messageFormat emacs" est passe'e a` oss."


File: asn1-mode.info,  Node: Editeur syntaxique,  Next: Personnalisation,  Prev: Compilation,  Up: Top

E'diteur syntaxique
*******************

Construction facilite'e de modules ASN.1
========================================

   Notre but ici n'est pas de proposer un e'diteur syntaxique complet.
En effet Emacs n'est pas adapte' a` la re'alisation de tels e'diteurs
qui ve'rifient a` tout moment la correction lexicale, syntaxique et
se'mantique du code e'dite'. Par contre, le mode ASN.1 permet :
   - de construire des modules ASN.1, en inse'rant des morceaux de
     grammaire,

   - de repe'rer les erreurs syntaxiques, en appelant depuis Emacs   un
     compilateur ou un analyseur syntaxique.
    Remarque : Le passage qui suit concernant le menu "ASN.1-Syntax" est
assez technique. Si vous voulez expe'rimenter par vous-me^me, voici un
exemple :
   -     Lancez le mode ASN.1 dans un buffer vide d'Emacs
     (`M-x asn1-mode').

   -     Dans le menu "ASN.1", se'lectionnez l'entre'e "Construire le
     Menu     Syntaxique".  Attendez quelques instants jusqu'a` ce que
     le menu "ASN.1-Syntax" apparaisse dans la barre des menus.

   -     Dans le menu "ASN.1-Syntax", se'lectionnez le sous-menu
     "ModuleDefinition" et, dans ce sous-menu, se'lectionnez l'entre'e
     "insert" . Dans votre buffer, vous devez voir apparai^tre sous le
     curseur : `"--(ModuleDefinition)--"'.

   -      Cliquez (ESC et en me^me temps bouton gauche de la souris ou
     bien pour les souris a` trois boutons : bouton droit) sur ce qui
     vient  d'apparai^tre : `"--(ModuleDefinition)--"'.
     `"--(ModuleDefinition)--"' est alors remplace' dans le buffer
     par :
          --$modulereference$-- --[DefinitiveIdentifer]--
          DEFINITIONS --[TagDefault]-- --[ExtensionDefault]-- ::=
             BEGIN
               --[Modulebody]--
             END

   -      En cliquant de la me^me manie`re que pre'ce'demment sur les
     e'le'ments en commentaire (que l'on appelle aussi me'tavariables)
     qui sont apparus, vous allez pouvoir de'velopper ces e'le'ments
     pour en faire apparai^tre de nouveaux. Ainsi vous pourrez
     construire un module ASN.1 complet.


Le menu "ASN.1-Syntax"
======================

   Remarque : pour faire apparai^tre le menu "ASN.1-Syntax",
se'lectionner l'entre'e "Construire le Menu     Syntaxique" du menu
ASN.1.

   Le menu "ASN.1-Syntax" permet a` l'utilisateur d'inse'rer des
e'le'ments de la grammaire ASN.1:1997 dans le buffer.  Le menu
pre'sente un certain nombre de non-terminaux de la grammaire ASN.1.
Chacun donne acce`s a` un sous-menu. La premie`re ligne d'un sous-menu
comporte la commande "insert". Cette commande permet d'inse'rer dans le
buffer courant (et a` l'endroit du curseur) le non-terminal dont le
sous-menu est issu.
Le reste du sous-menu pre'sente les diffe'rentes productions du
non-terminal.

   Dans le menu "ASN.1-Syntax", la notation suivante est employe'e :
   -  Un mot entoure' de `"("' et de `")"' repre'sente un non-terminal.
     Exemple : : `"(AssignmentList)"'

   -  Un mot entoure' de `"["' et de `"]"' repre'sente un non-terminal
     optionnel (on pourra l'e'liminer par la suite si on ne souhaite
     pas le   de'velopper).
     Exemple : : `"[DefinitiveIdentifier]"'

   - Un mot entoure' de `"$"' et de `"$"' repre'sente un terminal.
     Exemple : : `"$modulereference$"'

   - Un mot entoure' par aucun des symboles pre'ce'dents est une
     simple chai^ne de caracte`res.

   En cliquant un non-terminal du menu, on fait apparai^tre un
sous-menu qui pre'sente les diffe'rentes productions par lesquelles le
non-terminal peut e^tre remplace'. Si la re`gle comporte plusieurs
productions, chaque production commence par le signe `"-> "' pour les
diffe'rencier.
Exemple : : le sous-menu issu de "TaggedType" est :
             "
             insert
             ------------
             -> <Tag>
                <Type>
             -> <Tag>
                IMPLICIT
                <Type>
             -> <Tag>
                EXPLICIT
                <Type>
             "
   La fle`che indique le de'but de chaque production.

   En cliquant sur un terminal ou une chai^ne de caracte`res dans un
sous menu, on inse`re celui-ci dans le buffer courant.

   Les non-terminaux non optionnels sont inse're's dans le buffer sous
la forme suivante : `"--(non-terminal)--"', les non-terminaux
optionnels sous la forme : `"--[non-terminal]--"'  et les terminaux
sous la forme : `"--$terminal$--"'.
Exemple : :
   - Le premier e'le'ment du menu "ASN.1-Syntax" est "ModuleDefinition"
     qui est un sous-menu. Si vous cliquez sur l'e'le'ment "insert" de
     ce sous-menu, le non-terminal ModuleDefinition est inse're' dans
     le buffer courant. Il apparai^t sous la forme :
     `"--(ModuleDefinition)--"'.

   - Dans le sous-menu "ModuleDefinition", si vous cliquez sur
     `"$modulereference$"', le terminal `modulereference' est introduit
     sous le curseur sous la forme :
     `"--$modulereference$--"'.
    Remarque : les terminaux et non-terminaux  sont tous des
commentaires ASN.1, il est donc inutile de les supprimer avant de
compiler puisu'ils seront ignore's par les outils ASN.1.

De'veloppement en ligne
=======================

   Un non-terminal inse're' a` l'aide du menu "ASN.1-Syntax" est
sensible au passage du pointeur de la souris sur lui. En effet, lors du
passage de la souris, le non-terminal change de style d'e'criture et de
couleur (sauf pour les utilisateurs d'Emacs sous PC en Windows 3.1). Ce
signe distinctif permet d'informer l'utilisateur que cet e'le'ment du
texte interagit avec la souris. Lorsque l'on clique un non-terminal
(avec le bouton du milieu ou le bouton droit pour une souris a` deux
boutons)  un e've'nement se produit. Cet e've'nement peut  e^tre :
   -  si la re`gle associe'e a` ce non-terminal comporte une seule
     production, alors cette production est inse're'e dans le   buffer
     courant et le non-terminal initial est efface' ;

   -  si la re`gle associe'e a` ce non-terminal comporte de   multiples
     productions, un menu surgissant (ou pop-up   menu en anglais)
     apparai^t. Il suffit alors de cliquer sur la   production
     souhaite'e, celle-ci est inse're'e dans le buffer   courant et le
     non-terminal initial est efface'.
    Exemple :
en cliquant sur `"--(ModuleDefinition)--"', ce morceau de texte
disparai^t et le morceau de texte suivant est introduit en ses lieu et
place :
     --$modulereference$-- --[DefinitiveIdentifer]--
     DEFINITIONS --[TagDefault]-- --[ExtensionDefault]-- ::=
        BEGIN
          --[Modulebody]--
        END

   On a inse're' la partie droite de la re`gle de la grammaire dont la
partie gauche e'tait `ModuleDefinition'. A` partir de ce squelette de
module ASN.1, le module entier va pouvoir e^tre construit en cliquant
sur les terminaux et non-terminaux pour les de'velopper.

   Lorsque l'on clique sur un terminal, le minibuffer affiche le nom du
terminal dont il s'agit et attend que vous tapiez quelque chose au
clavier. Ce que vous avez tape' est analyse'. Si le terminal que vous
avez entre' est incorrect, soit Emacs le corrige par lui-me^me, soit il
e'met un message d'erreur et vous devez ensuite entrer un terminal
correct.

   Exemple :
vous cliquez sur `--$modulereference$--' et tapez `"module1"'  dans le
minibuffer. Dans le buffer la chai^ne de caracte`res `"Module1"' est
inse're'e. On constate que la casse de la premie`re lettre a e'te'
corrige'e automatiquement.
Autre exemple :
vous cliquez sur `--$number$--' (vous pouvez faire apparai^tre le
terminal en utilisant "Completion d'Element Syntaxique" dont le
fonctionnement est explique' au paragraphe suivant) et tapez `10.0'. Le
message suivant apparai^t :
`"The number you typed is not a correct number"'
En effet `number' de'signe un entier naturel (qui ne comporte pas de
virgule).
Vous tapez alors `10', le nombre est accepte' et il est inse're' dans
le buffer.
Remarque : le de'veloppement en ligne n'est totalement ope'rationnel
que si le menu de syntaxe "ASN.1-Syntax" est construit. Par exemple, si
le menu "ASN.1-Syntax" n'est pas charge' et que vous cliquez sur un
non-terminal, celui-ci ne sera pas reconnu.

Les deux dernie'res entre'es du menu "ASN.1-Syntax"
===================================================

   Les deux dernie'res entre'es du menu "ASN.1-Syntax" sont :
`M-n'
     "Supprimer un Element Syntaxique" efface le terminal ou le
     non-terminal qui est actuellement sous le curseur. Il est aussi
     tout simplement possible de se'lectionner le commentaire spe'cial
     et de l'effacer comme n'importe quel autre e'le'ment du buffer.

`M-['
     "Completion d'Element Syntaxique" propose une comple'tion sur
     l'ensemble des terminaux et non-terminaux. Ainsi vous pouvez
     introduire dans le buffer n'importe quel terminal ou non-terminal
     qui ne serait par exemple pas accessible avec le menu
     "ASN.1-Syntax".
     Exemple :
        - vous tapez  `M-[',

        - vous voulez introduire le non-terminal `ModuleDefinition',
          vous tapez
          donc :  `"ModuleDef"',

        - vous tapez `TAB' et `"ModuleDef"' est complete' en
          `"ModuleDefinition"',

        - vous tapez `ENTER', `"--(ModuleDefinition)--"' est inse're'
          dans le buffer.

   Remarque : la partie de la grammaire ASN.1:1997 accessible a`
l'utilisateur via le menu "ASN.1-Syntax" n'est pas exactement la
grammaire de la norme mais elle lui est e'quivalente. Cette grammaire a
e'te' le'ge`rement re'organise'e. D'autre part, les noms des
non-terminaux ont parfois e'te' adapte's afin d'e^tre, nous
l'espe'rons, mieux compris.  Il faut pre'ciser que l'ensemble de la
grammaire n'est pas visible dans le menu "ASN.1-Syntax". Il faut
utiliser "Completion d'Element Syntaxique" (`M-[') si vous voulez
introduire un non-terminal ou un terminal qui n'apparai^t pas dans le
menu "ASN.1-Syntax". Il faut utiliser la commande "ASN.1 Completion"
(`M-TAB') si vous voulez introduire un mot-cle' dans le buffer si
celui-ci n'apparai^t pas dans le menu "ASN.1-Syntax".

File: asn1-mode.info,  Node: Personnalisation,  Next: Configuration avancee,  Prev: Editeur syntaxique,  Up: Top

Personnalisation
****************

Personnalisation rapide
=======================

Le sous-menu "Personnalisation rapide" permet de changer directement
certaines options de configuration du mode ASN.1 :

   - Modification du langage

   - Modification de la commande de compilation

   - Modification des parame`tres de compilation

   - Construire le menu syntaxique au de'marrage

   - Sauvegarder la commande et les parame`tres de compilation

Utilisation des buffers "customize"
===================================

   La configuration du mode ASN.1 se fait essentiellement a` l'aide des
buffers dits "customize" d'Emacs. Le principe de ces buffers est tre`s
simple : le nom de la variable correspondant a` l'option est affiche'e
en couleur.  La valeur de cette variable est affiche'e a` sa droite.
(cliquer eventuellement sur [Show] pour voir cette valeur).  En
dessous, se trouve la documentation sur cette variable.  (cliquer
eventuellement sur [Show] pour voir toute la documentation).

   Si quelque chose a e'te' modifie', il suffit d'appuyer sur
[Save for Future Session] pour le sauvegarder.  Pour modifier
simplement le parame`tre pour cette session courante (sans rien
enregistrer), cliquer sur [State] et choisir l'entre'e
[Set for current session].

   Pour quitter, appuyer sur [Bury Buffer].

   Sous XEmacs, [Show] est repre'sente' par une petite fle`che et
[Bury Buffer] est remplace' par un bouton "done".

Options ge'ne'rales
===================

   Les options parame'trables via l'entre'e "Options Ge'ne'rales" sont :
   - Langage (franc,ais ou anglais)

   - Affichage ou non de la page de pre'sentation au chargement du mode

   - Commande de compilation

   - Parame`tres de compilation

   - Construction du menu syntaxique au de'marrage

   - bouton de la souris a` utiliser a` la place du bouton 2

   - Utilisation ou non d'un buffer "customize" pour modifier les
     couleurs. Par de'faut, un buffer plus convivial est affiche' (voir
     la *Note Modification des couleurs: Personnalisation.)

Modification de l'indentation
=============================

   Il est possible de parame`trer entie`rement la valeur des variables
d'indentation des diffe'rentes construction d'ASN.1 (elles sont liste'es
dans la *Note Configuration avancee::) via un buffer "customize"
d'Emacs.

Modification des couleurs
=========================

   Il est possible de modifier toutes les couleurs du mode.  L'entre'e
"Styles d'Ecriture et Couleurs..." du sous-menu "Personnalisation"
affiche un buffer semblable a` un buffer "customize" mais plus
convivial.

   Les cate'gories d'expression qui peuvent e^tre mises en couleurs
sont :

   - *Mots-cle's participant a` la structure d'un module* :
     "BEGIN" "DEFINITIONS" "END" "EXPORTS" "EXTENSIBILITY IMPLIED"
     "FROM" "IMPORTS",

   - *Mots-cle's concernant les classes d'objets informationnels* :
     "ABSTRACT-SYNTAX" "BY" "CLASS" "CONSTRAINED" "INSTANCE OF"
     "TYPE-IDENTIFIER" "WITH SYNTAX" "UNIQUE",

   - *Les expressions de sous-typage qui sont entre parenthe`ses*

   - *Mots-cle's et expressions concernant les tags* :
     "AUTOMATIC" "EXPLICIT" "IMPLICIT" "TAGS"   ainsi que les tags
     (ex. : `[UNIVERSAL 22]'),

   - *Mots-cle's OPTIONAL/DEFAULT*

   - *Mots-cle's ayant trait au sous-typage* :
     "ALL" "PRESENT" "ABSENT" "OPTIONAL" "EXCEPT" "COMPONENTS OF"
     "EXCEPT" "INCLUDES" "INTERSECTION" "MAX" "MIN" "SIZE" "UNION"
     "WITH COMPONENT" "WITH COMPONENTS",

   - *Mots-cle's concernant les types structures* :
     "CHOICE" "SEQUENCE" "SET" "OF",

   - *Mots-cle's designant des types* :
     "BIT STRING" "BMPString" "BOOLEAN" "CHARACTER" "EMBEDDED" "PDV"
     "ENUMERATED" "EXTERNAL" "GeneralizedTime" "GeneralString"
     "GraphicString"
     "IA5String" "INTEGER" "ISO646String" "NumericString"
     "ObjectDescriptor"
     "OBJECT IDENTIFIER" "OCTET STRING" "PrintableString"
     "RELATIVE-OID"
     "T61String" "TeletexString" "REAL" "UniversalString" "UTCTime"
     "UTF8String" "VideotexString" "VisibleString" "NULL",

   - *Mots-cle's designant des valeurs* :
     "FALSE" "MINUS-INFINITY" "PLUS-INFINITY" "NULL" "TRUE".

   - *Expression qui suit le WITH SYNTAX entre accolades*


File: asn1-mode.info,  Node: Configuration avancee,  Prev: Personnalisation,  Up: Top

Configuration avancee
*********************

   Il est possible de modifier directement les options du mode en
e'crivant du code Emacs-lisp dans le fichier `.emacs'.  Par exemple,
`(setq asn1-language 'fr)' donne a` la variable `asn1-language' la
valeur `'fr', ce qui signifie que le langage utilise' est le franc,ais.

   NB : Toutes les options de configuration sont accessibles depuis les
buffers "customize".

   Voici toutes les variables qui peuvent e^tres modifie'es :

   - asn1-language

   - asn1-data-basic-offset

   - asn1-compile-command

   - asn1-compile-switches

   - asn1-data-syntax-menu-autoload

   - asn1-data-use-colors

   - asn1-data-change-modeline

   - asn1-data-use-standard-custom

   - asn1-use-standard-custom

   - asn1-data-faces

   - asn1-data-basic-offset

   - asn1-data-bracket-indent-text

   - asn1-data-indent-of-DEFINITIONS

   - asn1-data-indent-in-DEFINITIONS-bloc

   - asn1-data-indent-of-BEGIN

   - asn1-data-indent-in-BEGIN-bloc

   - asn1-data-indent-of-END

   - asn1-data-indent-of-IMPORTS

   - asn1-data-indent-in-IMPORTS-bloc

   - asn1-data-indent-of-EXPORTS

   - asn1-data-indent-in-EXPORTS-bloc

   - asn1-data-indent-of-FROM

   - asn1-data-indent-of-\;

   - asn1-data-indent-of-\{

   - asn1-data-indent-of-\(

   - asn1-data-indent-of-\[

   - asn1-data-indent-of-::=

   - asn1-data-indent-WITH-SYNTAX

   - asn1-mode-hook

   - asn1-add-syntax-menu-hook

Ouvrages de re'fe'rence
=======================

   Emacs :

   - GNU Emacs Manual
     http://asn1.elibel.tm.fr/fr/outils/emacs/emacs.ps.gz
     [ps.gz - 456 p. - 1064 Ko]

   - GNU Emacs Lisp Introduction (version 1.05)
     http://asn1.elibel.tm.fr/fr/outils/emacs/emacs-lisp-intro.ps.gz
     [ps.gz - 258 p. - 731 Ko]

   - GNU Emacs Lisp Reference Manual (version 20-2.5)
     http://asn1.elibel.tm.fr/fr/outils/emacs/elisp.ps.gz
     [ps.gz - 888 p. - 1643 Ko]

   XEmacs :

   - GNU XEmacs Introduction (version 20-2.5)
     ftp://ftp.lip6.fr/pub/emacs/xemacs/docs/a4/new-users-guide-a4.ps.gz
     [ps.gz - 58 p. - 131 Ko]

   - GNU XEmacs Manual
     ftp://ftp.lip6.fr/pub/emacs/xemacs/docs/a4/xemacs-a4.ps.gz
     [ps.gz - 336 p. - 488 Ko]

   - GNU XEmacs Lisp Reference Manual (version 3.1)
     ftp://ftp.lip6.fr/pub/emacs/xemacs/docs/a4/lispref-a4.ps.gz
     [ps.gz - 828 p. - 1025 Ko]



Tag Table:
Node: Top314
Node: Pre'sentation du mode ASN.1646
Node: Installation3496
Node: Commandes de base5622
Node: le menu ASN.112500
Node: Compilation14022
Node: Editeur syntaxique16882
Node: Personnalisation26968
Node: Configuration avancee31279

End Tag Table
