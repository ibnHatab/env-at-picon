Ceci est le fichier Info asn1-mode.info, produit par Makeinfo version
4.1 à partir asn1-mode.texi.

INFO-DIR-SECTION Development
START-INFO-DIR-ENTRY
* ASN.1 mode: (asn1-mode).      ASN.1 editing mode for Emacs.
END-INFO-DIR-ENTRY

   This file documents ...

   Copyright 2003 France Te'le'com - R&D Division


File: asn1-mode.info,  Node: Top,  Next: Presentation of the ASN.1 mode,  Prev: (dir),  Up: (dir)

Emacs Mode for ASN.1
********************

* Menu:

* Presentation of the ASN.1 mode::
* Syntax editor::
* Compilation::
* Customization::
* Advanced configuration::


File: asn1-mode.info,  Node: Presentation of the ASN.1 mode,  Next: Syntax editor,  Prev: Top,  Up: Top

Presentation of the ASN.1 mode
******************************

   The ASN.1 mode for Emacs and XEmacs is a user-friendly tool for
writing and editing ASN.1 specifications. It allows text highlighting,
automatic indentation, completion, direct compiling in Emacs...

   It is a complete emacs mode. It is built in order to be as
user-friendly as possible.

   Moreover, this mode contains the ASN.1 grammar. It allows to built
ASN.1 modules using syntax menus, by clicking on the items.


File: asn1-mode.info,  Node: Syntax editor,  Next: Compilation,  Prev: Presentation of the ASN.1 mode,  Up: Top

Syntax editor
*************

   The mode provides:
   - help constructing ASN.1 modules by inserting parts of the grammar

   - detection of syntax errors, by calling in Emacs an ASN.1 compiler
     or a parser

Introduction
============

   A little example is the best way to introduce the syntax editor.
   - open a new ASN.1 file (with extension ".asn" or ".asn1")

   - if the "ASN.1-syntax" is not loaded at startup (i.e. if it doesn't
     appear in the menubar), build it: select the menu item "Build
     Syntax Menu" in the ASN.1 menu.

   - in the menu "ASN.1-Syntax", select the sub-menu "ModuleDefinition"
     and in this menu, select the item "insert". The text
     `"--(ModuleDefinition)--"' appears in the buffer. This text is
     mouse-sensitive: it is highlighted when the mouse is on it. It can
     be clicked on with the button-2 of the mouse (right button the two
     buttons mice).

   - click on this text. This text is erased and the body of a module
     definition is inserted:
          --$modulereference$-- --[DefinitiveIdentifer]--
          DEFINITIONS --[TagDefault]-- --[ExtensionDefault]-- ::=
             BEGIN
               --[Modulebody]--
             END

   - by clicking on the element which have appeared, it is possible to
     develop it and finally to build a complete ASN.1 module.

The menu ASN.1-Syntax
=====================

   The sections "Built Syntax Menu" and "Fast Customization" explain how
to build the syntax menu and how to build it at startup.  To build the
syntax menu, select the item "Build Syntax Menu" in the ASN.1 menu.

   The menu "ASN.1-Syntax" allows the user to insert elements of the
ASN.1 grammar in the buffer. The menu contains some non-terminals.  A
sub-menu is associated to each non-terminal. The first line of a
sub-menu contains the word "insert". This command inserts the
non-terminal associated with the sub-menu.  The rest of the sub-menu
gives the different productions of the non-terminal.  The following
notation is used:
   - a word surrounded by "(" and ")" is a non-terminal:
     "(non-terminal)"

   - a word surrounded by "[" and "]" is an optional non-terminal; it
     can be removed by: $* "[non-terminal]"

   - a word surrounded by "$" and "$" is a terminal: "$terminal$"

   By clicking on a non-terminal of the menu, a sub-menu representing
the different productions of the non-terminal appears. If the grammar
rule allows several productions, each production begins by the symbol
"->".   Ex.: the sub-menu issued of "TaggedType" is:
             "
             insert
             ------------
             -> <Tag>
                <Type>
             -> <Tag>
                IMPLICIT
                <Type>
             -> <Tag>
                EXPLICIT
                <Type>
             "

   The arrow indicates the beginning of each production.

   By clicking on a terminal or a string in a sub-menu, this terminal is
inserted in the current buffer.

   Note: terminals and non-terminals are nested in comments. Therefore,
it is possible to compile a module which contains both terminals and
non-terminals.

Developing ASN.1 modules
========================

   Clicking in a non-terminal has the following effect:
   - if the rule associated to this non-terminal allows only one
     production, this production is inserted in the buffer in place of
     the non-terminal.

   - if the rule associated to this non-terminal allows several
     productions, a popup menu appears. It is then possible to select a
     production. This production is inserted in the buffer in place of
     the non-terminal.

   Clicking on a terminal displays the name of the terminal and prompts
a value in the minibuffer. Some corrections are automatically done.

   Example 1:
Click on `--$modulereference$--' and type `"module1"'  in the
minibuffer. The string `"Module1"' is inserted.  The first letter has
automatically been capitalized.

   Example 2:
Click on `--$number$--' (you can insert this terminal using "Syntax
Element Completion" in the syntax menu). Then, enter `10.0'.  The
following message appears: "The number you typed is not a correct
number"
It is because `number' should be an integer (with no ".").  Type then
`10'. The number is accepted and inserted in the buffer.

   The last two items of the "ASN.1-Syntax" menu are:
`M-n'
     "Delete syntax element": erase the terminal or the non-terminal
     under the cursor.

`M-['
     "Syntax Element Completion": complete the terminal or the
     non-terminal.  Thus, you can insert all the ASN.1 terminals,
     everytime they are not accessible from the syntax menu.
     Example:
        - type  `M-[',

        - you want to introduce the non-terminal `ModuleDefinition',
          type
          `"ModuleDef"',

        - type `TAB' and `"ModuleDef"' is completed in
          `"ModuleDefinition"',

        - type `ENTER', `"--(ModuleDefinition)--"' is inserting in the
          buffer.

   Note: the part of the ASN.1 grammar accessible in the "ASN.1-Syntax"
menu is not exactly the grammar of the standard.  This grammar has been
reorganized and some non-terminals labels have sometimes been rennamed
to be self-explicit.  Only part of the grammar is accessible from the
syntax menu. To access the whole grammar, use "Syntax Element
Completion" (`M-['), for inserting a non-terminal or a terminal.  To
insert an ASN.1 keyword, use "ASN.1 Completion" (`M-TAB').


File: asn1-mode.info,  Node: Compilation,  Next: Customization,  Prev: Syntax editor,  Up: Top

Compilation
***********

   The item "Compile" of the ASN.1 menu allows to run an ASN.1 compiler
or a parser under Emacs. The user can then move to the position of an
error by clicking or typing `ENTER' on the error message.

   This mode is built to work with Asnp, a parser for ASN.1:1997
developed by France Telecom R&D
(http://asn1.elibel.tm.fr/en/tools/asnp).

`"Compile" (C-c C-c)'
     Start the compilation.

`"Compile Command" of the sub-menu "Fast Customization"'
     Change the "Compile" command.

     If the name of the command matches oss, the "-messageFormat emacs"
     option is passed to oss.

`"Compile Switches" of the sub-menu "Fast Customization"'
     Change the switches of the commande used by "Compile".  By
     default, no option is used.

     If the name of the command matches oss, the "-messageFormat emacs"
     option is passed to oss.

`Save settings'
     The compile command and switches can be saved using the sub-menu
     "Fast Customization".

`'

File: asn1-mode.info,  Node: Customization,  Next: Advanced configuration,  Prev: Compilation,  Up: Top

Customization
*************

Fast Customization
==================

   The sub-menu "Fast Customization" allows to easily change some
options of the ASN.1 mode:

   - Change language

   - Modify compile command

   - Modify compile switches

   - Build syntax menu at startup

   - Save compile command and switches

General options
===============

   The options are:

   - Language (French or English)

   - Show a presentation page at startup

   - Compile command

   - Compile switches

   - Syntax menu at startup

   - button of the mouse to use

   - Use of a standard "customize" buffer to change the colors

Modification of indentation
===========================

   A customize buffer allows to change the value of indentation
variables of the ASN.1 structures.

Modification of colors
======================

   A buffer similar to a "customize" buffer allows to modify all the
colors used in the mode:

   - *module skeleton*:
     "BEGIN" "DEFINITIONS" "END" "EXPORTS" "EXTENSIBILITY IMPLIED"
     "FROM" "IMPORTS",

   - *class keywords*:
     "ABSTRACT-SYNTAX" "BY" "CLASS" "CONSTRAINED" "INSTANCE OF"
     "TYPE-IDENTIFIER" "WITH SYNTAX" "UNIQUE",

   - *subtyping expressions*

   - *tags*:
     "AUTOMATIC" "EXPLICIT" "IMPLICIT" "TAGS"   and tags
     (ex.: `[UNIVERSAL 22]'),

   - *keywords OPTIONAL/DEFAULT*

   - *subtyping keywords*:
     "ALL" "PRESENT" "ABSENT" "OPTIONAL" "EXCEPT" "COMPONENTS OF"
     "EXCEPT" "INCLUDES" "INTERSECTION" "MAX" "MIN" "SIZE" "UNION"
     "WITH COMPONENT" "WITH COMPONENTS",

   - *structured types*:
     "CHOICE" "SEQUENCE" "SET" "OF",

   - *basic types*:
     "BIT STRING" "BMPString" "BOOLEAN" "CHARACTER" "EMBEDDED" "PDV"
     "ENUMERATED" "EXTERNAL" "GeneralizedTime" "GeneralString"
     "GraphicString"
     "IA5String" "INTEGER" "ISO646String" "NumericString"
     "ObjectDescriptor"
     "OBJECT IDENTIFIER" "OCTET STRING" "PrintableString"
     "RELATIVE-OID"
     "T61String" "TeletexString" "REAL" "UniversalString" "UTCTime"
     "UTF8String" "VideotexString" "VisibleString" "NULL",

   - *values*:
     "FALSE" "MINUS-INFINITY" "PLUS-INFINITY" "NULL" "TRUE".

   - *information object class*:
     user friendly syntax introduced by WITH SYNTAX


File: asn1-mode.info,  Node: Advanced configuration,  Prev: Customization,  Up: Top

Advanced configuration
**********************

   It is possible to modify directly the mode's options by writing
emacs-lisp code in the `.emacs' file

   Example: `(setq asn1-language 'en)' sets the value of
`asn1-language' to `'en', which means the language used is English.

   NB: all the configuration options can be modified with the
"customize" buffers.

   This is the list of all variables which can be modified:

   - asn1-language

   - asn1-data-basic-offset

   - asn1-compile-command

   - asn1-compile-switches

   - asn1-data-syntax-menu-autoload

   - asn1-data-use-colors

   - asn1-data-change-modeline

   - asn1-data-use-standard-custom

   - asn1-use-standard-custom

   - asn1-data-faces

   - asn1-data-basic-offset

   - asn1-data-bracket-indent-text

   - asn1-data-indent-of-DEFINITIONS

   - asn1-data-indent-in-DEFINITIONS-bloc

   - asn1-data-indent-of-BEGIN

   - asn1-data-indent-in-BEGIN-bloc

   - asn1-data-indent-of-END

   - asn1-data-indent-of-IMPORTS

   - asn1-data-indent-in-IMPORTS-bloc

   - asn1-data-indent-of-EXPORTS

   - asn1-data-indent-in-EXPORTS-bloc

   - asn1-data-indent-of-FROM

   - asn1-data-indent-of-\;

   - asn1-data-indent-of-\{

   - asn1-data-indent-of-\(

   - asn1-data-indent-of-\[

   - asn1-data-indent-of-::=

   - asn1-data-indent-WITH-SYNTAX

   - asn1-mode-hook

   - asn1-add-syntax-menu-hook

Bibliography
============

   Emacs:

   - GNU Emacs Manual
     http://asn1.elibel.tm.fr/en/tools/emacs/emacs.ps.gz
     [ps.gz - 456 p. - 1064 Ko]

   - GNU Emacs Lisp Introduction (version 1.05)
     http://asn1.elibel.tm.fr/en/tools/emacs/emacs-lisp-intro.ps.gz
     [ps.gz - 258 p. - 731 Ko]

   - GNU Emacs Lisp Reference Manual (version 20-2.5)
     http://asn1.elibel.tm.fr/en/tools/emacs/elisp.ps.gz
     [ps.gz - 888 p. - 1643 Ko]

   XEmacs:

   - GNU XEmacs Introduction (version 20-2.5)
     ftp://ftp.lip6.fr/pub/emacs/xemacs/docs/a4/new-users-guide-a4.ps.gz
     [ps.gz - 58 p. - 131 Ko]

   - GNU XEmacs Manual
     ftp://ftp.lip6.fr/pub/emacs/xemacs/docs/a4/xemacs-a4.ps.gz
     [ps.gz - 336 p. - 488 Ko]

   - GNU XEmacs Lisp Reference Manual (version 3.1)
     ftp://ftp.lip6.fr/pub/emacs/xemacs/docs/a4/lispref-a4.ps.gz
     [ps.gz - 828 p. - 1025 Ko]



Tag Table:
Node: Top311
Node: Presentation of the ASN.1 mode579
Node: Syntax editor1173
Node: Compilation6730
Node: Customization7817
Node: Advanced configuration10147

End Tag Table
